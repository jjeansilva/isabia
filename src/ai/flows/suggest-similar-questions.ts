// This file is generated by Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent that suggests similar questions based on a given question's content.
 *
 * - suggestSimilarQuestions - A function that handles the suggestion of similar questions.
 * - SuggestSimilarQuestionsInput - The input type for the suggestSimilarQuestions function.
 * - SuggestSimilarQuestionsOutput - The return type for the suggestSimilarQuestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestSimilarQuestionsInputSchema = z.object({
  enunciado: z
    .string()
    .describe('The text of the question to find similar questions to.'),
});

export type SuggestSimilarQuestionsInput = z.infer<
  typeof SuggestSimilarQuestionsInputSchema
>;

const SuggestSimilarQuestionsOutputSchema = z.object({
  similarQuestions: z
    .array(z.string())
    .describe('A list of similar questions based on the input question.'),
});

export type SuggestSimilarQuestionsOutput = z.infer<
  typeof SuggestSimilarQuestionsOutputSchema
>;

export async function suggestSimilarQuestions(
  input: SuggestSimilarQuestionsInput
): Promise<SuggestSimilarQuestionsOutput> {
  return suggestSimilarQuestionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestSimilarQuestionsPrompt',
  input: {schema: SuggestSimilarQuestionsInputSchema},
  output: {schema: SuggestSimilarQuestionsOutputSchema},
  prompt: `You are an AI assistant helping create questions for a study application.

You will be given a question, and you will respond with a list of similar questions that would be useful for the user to study.

Question: {{{enunciado}}}

Similar Questions:`,
});

const suggestSimilarQuestionsFlow = ai.defineFlow(
  {
    name: 'suggestSimilarQuestionsFlow',
    inputSchema: SuggestSimilarQuestionsInputSchema,
    outputSchema: SuggestSimilarQuestionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
